#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –æ—Ç cloudflared
"""

import subprocess
import time
import re

def get_cloudflared_url():
    """–ü–æ–ª—É—á–∞–µ—Ç URL –æ—Ç cloudflared"""
    
    print("üîç –ü–æ–∏—Å–∫ URL –æ—Ç cloudflared...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º cloudflared –≤ —Ñ–æ–Ω–µ
    try:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å
        subprocess.run(["pkill", "-f", "cloudflared"], capture_output=True)
        time.sleep(2)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ç—É–Ω–Ω–µ–ª—å
        process = subprocess.Popen(
            ["cloudflared", "tunnel", "--url", "http://localhost:5000"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –∏ –∏—â–µ–º URL
        for i in range(30):  # –ú–∞–∫—Å–∏–º—É–º 30 —Å–µ–∫—É–Ω–¥
            time.sleep(1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥
            if process.poll() is not None:
                break
                
            # –ß–∏—Ç–∞–µ–º stderr (cloudflared –≤—ã–≤–æ–¥–∏—Ç URL —Ç—É–¥–∞)
            stderr_output = process.stderr.read() if process.stderr else ""
            
            # –ò—â–µ–º URL –≤ –≤—ã–≤–æ–¥–µ
            url_match = re.search(r'https://[a-zA-Z0-9\-\.]+\.trycloudflare\.com', stderr_output)
            if url_match:
                url = url_match.group(0)
                print(f"‚úÖ URL –Ω–∞–π–¥–µ–Ω: {url}")
                return url
        
        print("‚ùå URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤—ã–≤–æ–¥–µ cloudflared")
        return None
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    url = get_cloudflared_url()
    if url:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ —Ñ–∞–π–ª
        with open('webapp_url.txt', 'w') as f:
            f.write(url)
        print(f"üíæ URL —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ webapp_url.txt: {url}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º main.py
        import update_webapp_url
        update_webapp_url.update_webapp_url(url)
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL") 