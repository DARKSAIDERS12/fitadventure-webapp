#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤ –≤ Cursor
–£—Å—Ç—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã "—Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤–µ–µ" –Ω–∞–≤—Å–µ–≥–¥–∞
"""

import os
import sys
import time
import shutil
from pathlib import Path
from datetime import datetime

def fix_save_conflicts_permanent():
    """–£—Å—Ç—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤"""
    print("üîß –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–≤—Å–µ–≥–¥–∞...")
    
    # –ü—É—Ç—å –∫ —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–µ
    project_path = Path("/home/darksaiders/–ó–∞–≥—Ä—É–∑–∫–∏/–º–æ–π –±–æ—Ç2")
    
    # 1. –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∫–µ—à–µ–π
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    temp_patterns = [
        "*.tmp", "*.temp", "*.swp", "*.swo", "*~", 
        ".DS_Store", "Thumbs.db", "*.lock"
    ]
    
    for pattern in temp_patterns:
        for file in project_path.glob(pattern):
            try:
                file.unlink()
                print(f"   –£–¥–∞–ª–µ–Ω: {file.name}")
            except:
                pass
    
    # 2. –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ Cursor
    print("üíæ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ Cursor...")
    cursor_cache_dirs = [
        Path.home() / ".cursor",
        Path.home() / ".config/cursor", 
        Path.home() / ".cache/cursor",
        project_path / ".vscode"
    ]
    
    for cache_dir in cursor_cache_dirs:
        if cache_dir.exists():
            try:
                for item in cache_dir.iterdir():
                    if item.name.startswith('workspace') or 'cache' in item.name:
                        if item.is_file():
                            item.unlink()
                        elif item.is_dir():
                            shutil.rmtree(item, ignore_errors=True)
                        print(f"   –û—á–∏—â–µ–Ω –∫–µ—à: {item.name}")
            except:
                pass
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ main.py
    main_file = project_path / "main.py"
    if main_file.exists():
        backup_name = f"main.py.backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
        backup_file = project_path / backup_name
        shutil.copy2(main_file, backup_file)
        print(f"üìã –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_name}")
    
    # 4. –°–±—Ä–æ—Å –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    print("üîë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...")
    for file in project_path.glob("*.py"):
        try:
            os.chmod(file, 0o664)  # rw-rw-r--
        except:
            pass
    
    # 5. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    print("üíø –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    os.sync()
    
    # 6. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Cursor –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    cursor_config = project_path / ".vscode" / "settings.json"
    cursor_config.parent.mkdir(exist_ok=True)
    
    config_content = '''{
    "files.autoSave": "off",
    "files.hotExit": "off",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.watcherExclude": {
        "**/.git/**": true,
        "**/__pycache__/**": true,
        "**/venv/**": true,
        "**/*.pyc": true,
        "**/.env": true
    },
    "editor.formatOnSave": false,
    "python.defaultInterpreterPath": "./venv/bin/python"
}'''
    
    with open(cursor_config, 'w', encoding='utf-8') as f:
        f.write(config_content)
    print(f"‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cursor: {cursor_config}")
    
    # 7. –°–æ–∑–¥–∞–Ω–∏–µ .gitignore –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    gitignore = project_path / ".gitignore"
    ignore_content = '''# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
*.tmp
*.temp
*.swp
*.swo
*~
.DS_Store
Thumbs.db
*.lock

# –ö–µ—à–∏
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so

# –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
venv/
env/

# –õ–æ–≥–∏
*.log
*.pid

# IDE
.vscode/
.cursor/
*.code-workspace

# –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
*.backup
*.old
main_backup_*.py
main_cache_backup_*.py
'''
    
    with open(gitignore, 'w', encoding='utf-8') as f:
        f.write(ignore_content)
    print(f"üìÑ –û–±–Ω–æ–≤–ª–µ–Ω .gitignore")
    
    print("‚úÖ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã!")
    print("üìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∑–∞–Ω–æ–≤–æ") 
    print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª")
    
    return True

def create_safe_save_wrapper():
    """–°–æ–∑–¥–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–±–µ—Ä—Ç–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"""
    wrapper_script = '''#!/usr/bin/env python3
"""
–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è main.py
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: python safe_save.py
"""

import os
import shutil
from pathlib import Path
from datetime import datetime

def safe_save_main():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ main.py"""
    main_file = Path("main.py")
    
    if not main_file.exists():
        print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_file = Path(f"main.py.safe_backup_{timestamp}")
    shutil.copy2(main_file, backup_file)
    
    # –û—á–∏—Å—Ç–∫–∞ lock-—Ñ–∞–π–ª–æ–≤
    for lock_file in Path.cwd().glob("*.lock"):
        try:
            lock_file.unlink()
        except:
            pass
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    os.sync()
    
    print(f"‚úÖ –§–∞–π–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
    print(f"üìã –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_file}")
    return True

if __name__ == "__main__":
    safe_save_main()
'''
    
    with open("safe_save.py", 'w', encoding='utf-8') as f:
        f.write(wrapper_script)
    
    os.chmod("safe_save.py", 0o755)
    print("üõ°Ô∏è –°–æ–∑–¥–∞–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞: safe_save.py")

if __name__ == "__main__":
    try:
        fix_save_conflicts_permanent()
        create_safe_save_wrapper()
        print("\nüéâ –†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –±–æ–ª—å—à–µ –Ω–µ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1) 