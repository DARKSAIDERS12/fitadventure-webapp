#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
"""

import os
import sys
import subprocess
from pathlib import Path

def create_systemd_service():
    """–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞"""
    project_path = Path("/home/darksaiders/–ó–∞–≥—Ä—É–∑–∫–∏/–º–æ–π –±–æ—Ç2")
    user = os.getenv("USER", "darksaiders")
    python_path = sys.executable
    
    service_content = f"""[Unit]
Description=FitAdventure Auto-Fix Monitor - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
After=graphical-session.target
Wants=graphical-session.target

[Service]
Type=simple
User={user}
Group={user}
WorkingDirectory={project_path}
ExecStart={python_path} {project_path}/simple_auto_monitor.py
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal
Environment=DISPLAY=:0
Environment=XDG_RUNTIME_DIR=/run/user/1000

[Install]
WantedBy=graphical-session.target
"""
    
    # –ü—É—Ç—å –∫ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É —Ñ–∞–π–ª—É
    service_file = Path.home() / ".config" / "systemd" / "user" / "fitadventure-autofix.service"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    service_file.parent.mkdir(parents=True, exist_ok=True)
    
    # –ó–∞–ø–∏—Å—å —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    with open(service_file, 'w', encoding='utf-8') as f:
        f.write(service_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω systemd —Å–µ—Ä–≤–∏—Å: {service_file}")
    return service_file

def create_desktop_autostart():
    """–°–æ–∑–¥–∞–Ω–∏–µ autostart —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞"""
    project_path = Path("/home/darksaiders/–ó–∞–≥—Ä—É–∑–∫–∏/–º–æ–π –±–æ—Ç2")
    python_path = sys.executable
    
    desktop_content = f"""[Desktop Entry]
Type=Application
Name=FitAdventure Auto-Fix Monitor
Comment=–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
Exec={python_path} {project_path}/simple_auto_monitor.py
Icon=applications-system
Hidden=false
NoDisplay=false
X-GNOME-Autostart-enabled=true
StartupNotify=false
Terminal=false
"""
    
    # –ü—É—Ç—å –∫ autostart —Ñ–∞–π–ª—É
    autostart_dir = Path.home() / ".config" / "autostart"
    autostart_dir.mkdir(parents=True, exist_ok=True)
    
    autostart_file = autostart_dir / "fitadventure-autofix.desktop"
    
    with open(autostart_file, 'w', encoding='utf-8') as f:
        f.write(desktop_content)
    
    # –î–µ–ª–∞–µ–º —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod(autostart_file, 0o755)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω autostart —Ñ–∞–π–ª: {autostart_file}")
    return autostart_file

def create_management_scripts():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º"""
    project_path = Path("/home/darksaiders/–ó–∞–≥—Ä—É–∑–∫–∏/–º–æ–π –±–æ—Ç2")
    
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
    start_script = f"""#!/usr/bin/env bash
# –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

echo "üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞ FitAdventure..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ
if pgrep -f "simple_auto_monitor.py" > /dev/null; then
    echo "‚ö†Ô∏è –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω!"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
cd "{project_path}"
nohup python3 simple_auto_monitor.py > autofix.log 2>&1 &

echo "‚úÖ –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
echo "üìÑ –õ–æ–≥–∏: {project_path}/autofix.log"
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ./stop_autofix.sh"
"""

    # –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    stop_script = """#!/usr/bin/env bash
# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞ FitAdventure..."

pkill -f "simple_auto_monitor.py"

if [ $? -eq 0 ]; then
    echo "‚úÖ –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ö†Ô∏è –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
fi
"""

    # –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
    status_script = """#!/usr/bin/env bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞

echo "üìä –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞ FitAdventure"
echo "=================================="

if pgrep -f "simple_auto_monitor.py" > /dev/null; then
    PID=$(pgrep -f "simple_auto_monitor.py")
    echo "‚úÖ –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç (PID: $PID)"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
    if [ -f "autofix.log" ]; then
        echo ""
        echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:"
        tail -5 autofix.log
    fi
else
    echo "‚ùå –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    echo "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å: ./start_autofix.sh"
fi
"""

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å–∫—Ä–∏–ø—Ç–æ–≤
    scripts = {
        "start_autofix.sh": start_script,
        "stop_autofix.sh": stop_script,  
        "status_autofix.sh": status_script
    }
    
    created_scripts = []
    for script_name, script_content in scripts.items():
        script_path = project_path / script_name
        
        with open(script_path, 'w', encoding='utf-8') as f:
            f.write(script_content)
        
        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
        os.chmod(script_path, 0o755)
        created_scripts.append(script_path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç: {script_name}")
    
    return created_scripts

def setup_systemd_service():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è systemd —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd
        subprocess.run(["systemctl", "--user", "daemon-reload"], check=False)
        
        # –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
        result = subprocess.run(
            ["systemctl", "--user", "enable", "fitadventure-autofix.service"],
            capture_output=True, text=True
        )
        
        if result.returncode == 0:
            print("‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ systemd –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        else:
            print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π systemd: {result.stderr}")
            
        return result.returncode == 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ systemd: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
    print("=" * 60)
    
    try:
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
        service_file = create_systemd_service()
        
        # 2. –°–æ–∑–¥–∞–Ω–∏–µ desktop autostart
        autostart_file = create_desktop_autostart()
        
        # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        scripts = create_management_scripts()
        
        # 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞
        systemd_success = setup_systemd_service()
        
        print("\nüéâ –ê–í–¢–û–ó–ê–ü–£–°–ö –ù–ê–°–¢–†–û–ï–ù –£–°–ü–ï–®–ù–û!")
        print("=" * 40)
        print("üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
        print(f"   ‚Ä¢ systemd —Å–µ—Ä–≤–∏—Å: {service_file}")
        print(f"   ‚Ä¢ Desktop autostart: {autostart_file}")
        print("   ‚Ä¢ –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        for script in scripts:
            print(f"     - {script.name}")
        
        print("\nüöÄ –°–ø–æ—Å–æ–±—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print("   ‚Ä¢ –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: ./start_autofix.sh")
        print("   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ./stop_autofix.sh")
        print("   ‚Ä¢ –°—Ç–∞—Ç—É—Å: ./status_autofix.sh")
        print("   ‚Ä¢ systemd: systemctl --user start fitadventure-autofix")
        
        print("\n‚ú® –ê–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:")
        print("   ‚Ä¢ –ó–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å–∏—Å—Ç–µ–º—É")
        print("   ‚Ä¢ –û–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
        print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Ö –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å")
        print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        
        if systemd_success:
            print("\nüí° –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–µ–Ω! –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        else:
            print("\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ./start_autofix.sh –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 